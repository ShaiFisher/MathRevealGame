{"version":3,"sources":["utils/storage.js","utils/translation.js","components/ConfirmModal/index.js","components/NameModal/index.js","components/PlayerSelect/index.js","utils/math.js","components/Excercise/index.js","components/Puzzle/index.js","components/Gallery/index.js","components/BouncingImage/index.js","components/LanguageSelect/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["getStorageItem","name","defaultValue","itemJson","localStorage","getItem","JSON","parse","error","setStorageItem","value","setItem","stringify","TRANSLATIONS","he","Player","Missions","Toggle","Rename","Name","OK","Cancel","Images","Add","Close","Remove","t","key","language","navigator","substr","translations","toLowerCase","ConfirmModal","show","title","body","onConfirm","onCancel","Modal","onHide","animation","Header","closeButton","Title","Body","Footer","Button","variant","onClick","NameModal","props","state","onSave","handleChange","bind","handleSave","event","this","setState","target","preventDefault","className","Form","Group","controlId","Control","type","placeholder","onChange","React","Component","PlayerSelect","players","player","onPlayersChange","onSwitchPlayer","useState","showAdd","setShowAdd","showRemove","setShowRemove","showRename","setShowRename","switchPlayer","DropdownButton","Dropdown","Item","length","Divider","map","as","newName","push","missions","i","indexOf","splice","rand","range","Math","floor","random","num1","num2","resultStr","currentPlayerName","RANGES","OPERATORS_DEFAULTS","char","enabled","calc","operators","op","answer","isWrong","initExercise","opi","temp","Exercise","onCorrect","onMistake","onUpdatePlayer","updateState","forceUpdate","useCallback","useEventListener","setTimeout","startsWith","toggleOp","operatorsLeft","filter","opChar","opObj","substring","parseInt","Row","ButtonGroup","aria-label","index","id","active","points","cells","Array","x","fill","Puzzle","images","onComplete","onConfig","image","setImage","showExcercise","setShowExcercise","isMistake","setIsMistake","initPuzzle","replaceImage","Col","row","col","revealCell","ROWS","xs","align","when","src","alt","cellSpacing","isRevealed","Gallery","intervalId","newImageUrl","onUpdate","onClose","removeImage","dialogClassName","FormGroup","InputGroup","Append","Jumbotron","CardDeck","imageUrl","Card","style","width","Img","Text","getComputedStyle","ele","document","getElementById","window","getWidth","eleStyle","removeSuffix","str","len","isOutOfRange","pos","screenLength","imageLength","BouncingImage","currentCount","posX","posY","rocks","dirX","dirY","size","onEnd","screenWidth","screenHeight","height","getHeight","forEach","rock","clearInterval","setInterval","moveRocks","endGame","splitRock","top","left","LANGUAGES","LanguageSelect","onchange","switchLanguage","lang","IMAGES","from","_","missionComplete","App","setPlayer","showGallery","setShowGallery","showPrize","setShowPrize","setLanguage","handleConfigChange","Container","Boolean","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.57f4087d.chunk.js","sourcesContent":["export function getStorageItem(name, defaultValue) {\r\n  const itemJson = localStorage.getItem(name);\r\n  if (itemJson) {\r\n    try {\r\n      return JSON.parse(itemJson);\r\n    } catch (error) {\r\n      return itemJson;\r\n    }\r\n  }\r\n  return defaultValue;\r\n}\r\n\r\nexport function setStorageItem(name, value) {\r\n  localStorage.setItem(name, JSON.stringify(value));\r\n}\r\n\r\nexport function getImages(name) {\r\n  return getStorageItem(\r\n    \"images\",\r\n    Array.from({ length: 10 }, (_, i) => i + 1)\r\n  );\r\n}\r\n","import { getStorageItem } from \"../utils/storage\";\r\n\r\nconst TRANSLATIONS = {\r\n  he: {\r\n    Player: \"שחקן\",\r\n    Missions: \"משימות\",\r\n    Toggle: \"כיבוי / הפעלה\",\r\n    Rename: \"שנה שם\",\r\n    \"Remove Player\": \"הסר שחקן\",\r\n    \"Add Player\": \"הוסף שחקן\",\r\n    Name: \"שם\",\r\n    OK: \"אישור\",\r\n    Cancel: \"ביטול\",\r\n    \"Are you sure?\": \"האם את/ה בטו/ח?\",\r\n    \"Current Player\": \"שחקן נוכחי\",\r\n    Images: \"תמונות\",\r\n    Add: \"הוסף\",\r\n    Close: \"סגור\",\r\n    Remove: \"הסר\",\r\n    \"Random Image Generators\": \"מחוללי קישורים לתמונה אקראית\",\r\n  },\r\n};\r\n\r\nexport function t(key, language) {\r\n  language =\r\n    language || getStorageItem(\"language\") || navigator.language.substr(0, 2);\r\n  if (language && TRANSLATIONS[language]) {\r\n    const translations = TRANSLATIONS[language];\r\n    return translations[key] || translations[key.toLowerCase()] || key;\r\n  }\r\n  return key;\r\n}\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { t } from \"../../utils/translation\";\r\n\r\nfunction ConfirmModal({ show, title, body, onConfirm, onCancel }) {\r\n  return (\r\n    <Modal show={show} onHide={onCancel} animation={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{t(title)}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{t(body)}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={onCancel}>\r\n          {t(\"Cancel\")}\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={onConfirm}>\r\n          {t(\"OK\")}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ConfirmModal;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { t } from \"../../utils/translation\";\r\n\r\nclass NameModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { value: props.defaultValue };\r\n    this.show = props.show;\r\n    this.title = props.title;\r\n    this.onSave = props.onSave;\r\n    this.onCancel = props.onCancel;\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleSave(event) {\r\n    event.preventDefault();\r\n    this.onSave(this.state.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        show={true}\r\n        onHide={this.onCancel}\r\n        className=\"name-modal\"\r\n        animation={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{this.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formGroupEmail\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"Name\")}\r\n                value={this.state.value}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={this.onCancel}>\r\n            {t(\"Cancel\")}\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={this.handleSave}>\r\n            {t(\"OK\")}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NameModal;\r\n","import React, { useState } from \"react\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport ConfirmModal from \"../ConfirmModal\";\r\nimport NameModal from \"../NameModal\";\r\nimport { t } from \"../../utils/translation\";\r\n\r\nfunction PlayerSelect({ players, player, onPlayersChange, onSwitchPlayer }) {\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [showRemove, setShowRemove] = useState(false);\r\n  const [showRename, setShowRename] = useState(false);\r\n\r\n  const handleAddSave = (newName) => {\r\n    if (newName) {\r\n      players.push({\r\n        name: newName,\r\n        missions: 0,\r\n      });\r\n      onPlayersChange();\r\n      onSwitchPlayer(newName);\r\n      setShowAdd(false);\r\n    }\r\n  };\r\n\r\n  const confirmRemovePlayer = () => {\r\n    if (players.length > 1) {\r\n      setShowRemove(true);\r\n    }\r\n  };\r\n\r\n  const removePlayer = () => {\r\n    if (players.length > 1) {\r\n      const i = players.indexOf(player);\r\n      players.splice(i, 1);\r\n      onSwitchPlayer(players[0].name);\r\n      onPlayersChange();\r\n      setShowRemove(false);\r\n    }\r\n  };\r\n\r\n  const handleRenameSave = (newName) => {\r\n    if (newName) {\r\n      player.name = newName;\r\n      onPlayersChange();\r\n      setShowRename(false);\r\n    }\r\n  };\r\n\r\n  const switchPlayer = (event) => onSwitchPlayer(event.target.name);\r\n\r\n  return (\r\n    <span className=\"inline\">\r\n      <DropdownButton\r\n        title={t(\"Current Player\") + \": \" + player.name}\r\n        variant=\"outline-secondary\"\r\n      >\r\n        <Dropdown.Item onClick={() => setShowRename(true)}>\r\n          {t(\"Rename\")}\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={confirmRemovePlayer}>\r\n          {t(\"Remove Player\")}\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={() => setShowAdd(true)}>\r\n          {t(\"Add Player\")}\r\n        </Dropdown.Item>\r\n        <Dropdown.Divider />\r\n        {players.map((player) => (\r\n          <Dropdown.Item\r\n            key={player.name}\r\n            name={player.name}\r\n            as=\"button\"\r\n            onClick={switchPlayer}\r\n          >\r\n            {player.name}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n\r\n      {showAdd && (\r\n        <NameModal\r\n          show={showAdd}\r\n          title={t(\"Add Player\")}\r\n          onCancel={() => setShowAdd(false)}\r\n          onSave={handleAddSave}\r\n        />\r\n      )}\r\n\r\n      {showRename && (\r\n        <NameModal\r\n          title={t(\"Rename\") + \" - \" + player.name}\r\n          defaultValue={player.name}\r\n          onCancel={() => setShowRename(false)}\r\n          onSave={handleRenameSave}\r\n        />\r\n      )}\r\n\r\n      <ConfirmModal\r\n        show={showRemove}\r\n        title={t(\"Remove Player\") + \" - \" + player.name}\r\n        body={t(\"Are you sure?\")}\r\n        onConfirm={removePlayer}\r\n        onCancel={() => setShowRemove(false)}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default PlayerSelect;\r\n","\r\nconst OP_PLUS = '+';\r\nconst OP_MINUS = '-';\r\nconst OP_MULTI = '×';\r\nconst OP_DIV = '÷';\r\n\r\nexport function calc(num1, num2, op) {\r\n    switch(op) {\r\n        case OP_PLUS:\r\n        return num1 + num2;\r\n        case OP_MINUS:\r\n        return num1 - num2;\r\n        case OP_MULTI:\r\n        return num1 * num2;\r\n        case OP_DIV:\r\n        return num1 / num2;\r\n        default:\r\n        return num1 + num2;\r\n    }\r\n}\r\n\r\nexport function rand(range) {\r\n    return Math.floor(Math.random() * range);\r\n}","import React from 'react';\r\nimport './exercise.css';\r\nimport useEventListener from '@use-it/event-listener'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { t } from '../../utils/translation';\r\nimport { calc, rand } from '../../utils/math';\r\n\r\n\r\nconst OP_PLUS = '+';\r\nconst OP_MINUS = '-';\r\nconst OP_MULTI = '×';\r\nconst OP_DIV = '÷';\r\nconst RANGES = [ 5, 10, 20, 50 ];\r\nconst OPERATORS_DEFAULTS = [\r\n  {\r\n    char: OP_PLUS,\r\n    enabled: true,\r\n    range: 50,\r\n    calc: (num1, num2) => num1 + num2\r\n  },\r\n  {\r\n    char: OP_MINUS,\r\n    enabled: true,\r\n    range: 20,\r\n    calc: (num1, num2) => num1 - num2\r\n  },\r\n  {\r\n    char: OP_MULTI,\r\n    enabled: true,\r\n    range: 10,\r\n    calc: (num1, num2) => num1 * num2\r\n  },\r\n  {\r\n    char: OP_DIV,\r\n    enabled: true,\r\n    range: 5,\r\n    calc: (num1, num2) => num1 / num2\r\n  }\r\n];\r\n\r\nlet num1;\r\nlet num2;\r\nlet operators = OPERATORS_DEFAULTS;\r\nlet op = operators[0]; // curren operator objet\r\nlet resultStr;\r\nlet answer = \"\";\r\nlet isWrong = false;\r\nlet currentPlayerName;\r\n\r\nfunction initExercise() {\r\n  //console.log('initExercise:', operators);\r\n  do {\r\n    const opi = rand(operators.length);\r\n    op = operators[opi];\r\n  } while (!op.enabled);\r\n\r\n  num1 = rand(op.range);\r\n  num2 = rand(op.range);\r\n\r\n  // reduce zeros\r\n  if (num1 === 0) {\r\n    num1 = rand(op.range);\r\n  }\r\n\r\n  if (op.char === OP_MINUS && num2 > num1) {\r\n    const temp = num1;\r\n    num1 = num2;\r\n    num2 = temp;\r\n  }\r\n  if (op.char === OP_DIV) {\r\n    while (num2 === 0) {\r\n      num2 = rand(op.range);\r\n    }\r\n    num1 = num1 * num2;\r\n  }\r\n  resultStr = calc(num1, num2, op.char) + \"\";\r\n  answer = \"\";\r\n  //console.log('init: ' + num1 + ' ' + op.char + ' ' + num2);\r\n}\r\n\r\ninitExercise();\r\n\r\nfunction Exercise({\r\n  player, onCorrect, onMistake, onUpdatePlayer\r\n}) {\r\n  const [, updateState] = React.useState();\r\n  const forceUpdate = React.useCallback(() => updateState({}), []);\r\n\r\n  if (player.name !== currentPlayerName) {\r\n    if (player.operators) {\r\n      operators = player.operators;\r\n    } else {\r\n      player.operators = OPERATORS_DEFAULTS;\r\n      onUpdatePlayer();\r\n    }\r\n    currentPlayerName = player.name;\r\n    initExercise();\r\n  }\r\n\r\n  useEventListener('keydown', ({key}) => {\r\n    if (key >=0 && key <=9) {\r\n      answer += key\r\n      if (answer === resultStr) {\r\n        setTimeout(() => {\r\n          onCorrect();\r\n          initExercise();\r\n          forceUpdate();\r\n        }, 1000);\r\n      } else if (!resultStr.startsWith(answer)) {\r\n        isWrong = true;\r\n        onMistake();\r\n        setTimeout(() => {\r\n          answer = \"\";\r\n          isWrong = false;\r\n          forceUpdate();\r\n        }, 1000);\r\n      }\r\n      forceUpdate();\r\n    }\r\n  });\r\n\r\n  const toggleOp = (event) => {\r\n    const operatorsLeft = operators.filter((op) => op.enabled).length;\r\n    const opChar = event.target.name[0];\r\n    const opObj = operators.filter(op => op.char === opChar)[0];\r\n    const range = event.target.name.substring(1);\r\n    \r\n    if (range === \"x\") {  // toggle\r\n      if (operatorsLeft > 1 || !opObj.enabled) {\r\n        opObj.enabled = !opObj.enabled;\r\n      }\r\n    } else {\r\n      opObj.range = parseInt(range);\r\n      opObj.enabled = true;\r\n    }\r\n    //console.log(\"toggleOp\", opChar, range, opObj);\r\n    initExercise();\r\n    onUpdatePlayer();\r\n    forceUpdate();\r\n  };\r\n\r\n  return (\r\n    <div className=\"exercise-wrap\">\r\n      <Row>\r\n        <div className=\"control\">\r\n          <ButtonGroup aria-label=\"Basic example\">\r\n            {operators.map((op, index) => \r\n              <DropdownButton\r\n                id=\"dropdown-item-button\"\r\n                key={op.char}\r\n                title={op.char}\r\n                variant={op.enabled ? \"success\" : \"outline-secondary\"}\r\n              >\r\n                <Dropdown.Item \r\n                    as=\"button\"\r\n                    name={op.char + \"x\"}\r\n                    onClick={toggleOp}\r\n                >{t(\"Toggle\")}\r\n                </Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                {RANGES.map(range => \r\n                  <Dropdown.Item \r\n                    key={range}\r\n                    as=\"button\"\r\n                    active={op.range === range}\r\n                    name={op.char + range}\r\n                    onClick={toggleOp}\r\n                  >{range}</Dropdown.Item>\r\n                )}\r\n              </DropdownButton>\r\n            )}\r\n            </ButtonGroup>\r\n        </div>\r\n      </Row>\r\n      <Row className=\"exercise\">\r\n        <h1>{num1} {op.char} {num2} = \r\n          <span className={isWrong ? \"wrong\" : \"\"}> {answer}</span>\r\n        </h1>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Exercise;\r\n","import React, { useState } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Shake from \"react-reveal/HeadShake\";\r\nimport Exercise from \"../Excercise\";\r\nimport { rand } from \"../../utils/math\";\r\nimport \"./puzzle.css\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { BiRefresh } from \"react-icons/bi\";\r\n\r\nconst ROWS = 4;\r\nconst COLS = 6;\r\nconst MISSION_POINTS = ROWS * COLS;\r\nlet points = 0;\r\nlet cells = [...Array(ROWS)].map((x) => Array(COLS).fill(false));\r\n\r\nfunction revealCell() {\r\n  let row = rand(ROWS);\r\n  let col = rand(COLS);\r\n  while (cells[row][col]) {\r\n    row = rand(ROWS);\r\n    col = rand(COLS);\r\n  }\r\n  cells[row][col] = true;\r\n}\r\n\r\nfunction Puzzle({ player, images, onComplete, onConfig }) {\r\n  const [, updateState] = React.useState();\r\n  const forceUpdate = React.useCallback(() => updateState({}), []);\r\n  const [image, setImage] = useState(images[rand(images.length)]);\r\n  const [showExcercise, setShowExcercise] = useState(true);\r\n  const [isMistake, setIsMistake] = useState(true);\r\n\r\n  const initPuzzle = () => {\r\n    for (let i = 0; i < ROWS; i++) {\r\n      cells[i].fill(false);\r\n    }\r\n  };\r\n\r\n  if (points === 0) {\r\n    initPuzzle();\r\n  }\r\n\r\n  const replaceImage = () => {\r\n    setImage(images[rand(images.length)]);\r\n  }\r\n\r\n  const handleCorrect = () => {\r\n    points++;\r\n    revealCell();\r\n\r\n    if (points === MISSION_POINTS) {\r\n      setShowExcercise(false);\r\n      onComplete();\r\n      setTimeout(() => {\r\n        points = 0;\r\n        setShowExcercise(true);\r\n\r\n        setImage(\"\"); // reload image (for random generators)\r\n        setTimeout(() => {\r\n          replaceImage();\r\n        }, 1000);\r\n      }, 8000);\r\n    }\r\n    forceUpdate();\r\n  };\r\n\r\n  const handleMistake = () => {\r\n    setIsMistake(true);\r\n    setTimeout(() => {\r\n      setIsMistake(false);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        {showExcercise && (\r\n          <Exercise\r\n            player={player}\r\n            onCorrect={handleCorrect}\r\n            onMistake={handleMistake}\r\n            onUpdatePlayer={onConfig}\r\n          ></Exercise>\r\n        )}\r\n      </Col>\r\n      <Col xs={7} className=\"no-padding\">\r\n        <div align=\"right\" className=\"btn-reload\">\r\n          <Button onClick={replaceImage} variant=\"dark\">\r\n            <BiRefresh />\r\n          </Button>\r\n        </div>\r\n        <Row className=\"puzzle\">\r\n          <Shake when={isMistake}>\r\n            <img src={image} alt=\"background\" className=\"bg\" />\r\n\r\n            <table cellSpacing=\"0\" className=\"cells\">\r\n              <tbody>\r\n                {cells.map((row, index) => (\r\n                  <tr key={index}>\r\n                    {row.map((isRevealed, index) => (\r\n                      <td key={index} className={isRevealed ? \"revealed\" : \"\"}>\r\n                        {isRevealed}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </Shake>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Puzzle;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport { t } from \"../../utils/translation\";\r\nimport \"./gallery.css\";\r\nimport { FormGroup } from \"react-bootstrap\";\r\n\r\nfunction Gallery({ images, onUpdate, onClose }) {\r\n  //console.log(\"Gallery: images:\", images);\r\n\r\n  let newImageUrl;\r\n\r\n  const addImage = () => {\r\n    images.push(newImageUrl);\r\n    onUpdate();\r\n  };\r\n\r\n  const removeImage = (event) => {\r\n    const i = images.indexOf(event.target.name);\r\n    images.splice(i, 1);\r\n    onUpdate();\r\n  };\r\n\r\n  return (\r\n    <Modal show={true} onHide={onClose} dialogClassName=\"modal-90w\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{t(\"Images\")}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <FormGroup>\r\n            <InputGroup className=\"dir-ltr\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"URL\")}\r\n                onChange={(event) => (newImageUrl = event.target.value)}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button variant=\"primary\" onClick={addImage}>\r\n                  {t(\"Add\")}\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </FormGroup>\r\n        </Form>\r\n\r\n        <Jumbotron>\r\n          <h3>{t(\"Random Image Generators\")}</h3>\r\n          <p className=\"dir-ltr\">\r\n            https://picsum.photos/800/600 <br/>\r\n            https://source.unsplash.com/800x600<br/>\r\n            https://loremflickr.com/800/600<br/>\r\n            https://loremflickr.com/800/600/dog<br/>\r\n          </p>\r\n        </Jumbotron>\r\n\r\n        <CardDeck>\r\n          {images.map((imageUrl) => (\r\n            <Card key={imageUrl} style={{ width: \"18rem\" }}>\r\n              <Card.Img variant=\"top\" src={imageUrl} />\r\n              <Card.Body>\r\n                <Card.Text>{imageUrl}</Card.Text>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  className=\"gallery-image-remove\"\r\n                  name={imageUrl}\r\n                  onClick={removeImage}\r\n                >\r\n                  X\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          ))}\r\n        </CardDeck>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={onClose}>\r\n          {t(\"Close\")}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","import React, { Component } from \"react\";\r\nimport \"./BouncingImage.css\";\r\n\r\nconst SLOW_AFTER = 240;\r\nconst INTERVAL = 80;\r\nconst SHIFT = 10;\r\nconst ROCK_SIZE = 300;\r\nconst MAX_FRACTION = 4;   // 2,4,8,...\r\nlet intervalId;\r\n\r\nfunction getComputedStyle(className) {\r\n  var ele = document.getElementById(className);\r\n  return ele ? window.getComputedStyle(ele) : null;\r\n}\r\n\r\nfunction getWidth(className) {\r\n  const eleStyle = getComputedStyle(className);\r\n  return eleStyle ? removeSuffix(eleStyle.width, 2) : 0;\r\n}\r\n\r\nfunction getHeight(className) {\r\n  const eleStyle = getComputedStyle(className);\r\n  return eleStyle ? removeSuffix(eleStyle.height, 2) : 0;\r\n}\r\n\r\nfunction removeSuffix(str, len) {\r\n  return str.substr(0, str.length - len);\r\n}\r\n\r\nfunction isOutOfRange(pos, screenLength, imageLength) {\r\n  return pos <= 0 || pos >= screenLength - imageLength - 40;\r\n}\r\n\r\nclass BouncingImage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const rocks = [\r\n      {\r\n        posX: 0,\r\n        posY: 0,\r\n        dirX: 1,\r\n        dirY: 1,\r\n        size: 1,\r\n      },\r\n    ];\r\n    this.state = { currentCount: 0, posX: 0, posY: 0, rocks: rocks };\r\n    this.onEnd = props.onClose;\r\n  }\r\n\r\n  moveRocks() {\r\n    // after few intervals, slow movement by half (by skiping half of intervals)\r\n    if (this.state.currentCount > SLOW_AFTER && this.state.currentCount % 2 === 0) {\r\n      this.setState({\r\n        currentCount: this.state.currentCount + 1\r\n      });\r\n      return;\r\n    }\r\n    const screenWidth = getWidth(\"bnc-screen\");\r\n    const screenHeight = getHeight(\"bnc-screen\");\r\n    this.state.rocks.forEach((rock) => {\r\n      rock.posX = rock.posX + SHIFT * rock.dirX;\r\n      rock.posY = rock.posY + SHIFT * rock.dirY;\r\n      if (isOutOfRange(rock.posX, screenWidth, ROCK_SIZE / rock.size)) {\r\n        rock.dirX *= -1;\r\n      }\r\n      if (isOutOfRange(rock.posY, screenHeight, ROCK_SIZE / rock.size)) {\r\n        rock.dirY *= -1;\r\n      }\r\n    });\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1,\r\n      rocks: this.state.rocks,\r\n    });\r\n\r\n    // if element is gone\r\n    if (!getWidth(\"bnc-screen\")) {\r\n      clearInterval(this.intervalId);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.intervalId = setInterval(this.moveRocks.bind(this), INTERVAL);\r\n    //console.log(\"set interval:\", this.intervalId);\r\n    intervalId = this.intervalId;\r\n  }\r\n\r\n  endGame() {\r\n    //console.log(\"endGame:\", this, intervalId);\r\n    clearInterval(intervalId);\r\n    this.onEnd();\r\n  }\r\n\r\n  splitRock(index) {\r\n    const rocks = this.state.rocks;\r\n    const rock = rocks[index];\r\n    if (!rock) {\r\n      return;\r\n    }\r\n    //console.log(\"splitRock:\", index, rock.size);\r\n    if (rock.size >= MAX_FRACTION) {\r\n      rocks.splice(index, 1);\r\n      if (rocks.length === 0) {\r\n        this.endGame();\r\n      }\r\n    } else {\r\n      rock.dirY *= -1;\r\n      rock.size *= 2;\r\n      this.state.rocks.push({\r\n        ...rock,\r\n        dirY: rock.dirY * -1,\r\n        dirX: rock.dirX * -1,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bouncing-screen\" id=\"bnc-screen\">\r\n        {this.state.rocks.map((rock, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"bouncing-image\"\r\n            onClick={() => this.splitRock(index)}\r\n            style={{ top: rock.posY + \"px\", left: rock.posX + \"px\" }}\r\n          >\r\n            <img\r\n              src=\"chocolate.png\"\r\n              alt=\"Chocolate!\"\r\n              style={{\r\n                width: ROCK_SIZE / rock.size + \"px\",\r\n                height: ROCK_SIZE / rock.size + \"px\",\r\n              }}\r\n            ></img>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//module.exports = BouncingImage;\r\nexport default BouncingImage;\r\n","import React from \"react\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\n\r\nconst LANGUAGES = [\"en\", \"he\"];\r\n\r\nfunction LanguageSelect({ language, onchange }) {\r\n\r\n  const switchLanguage = (event) => onchange(event.target.name);\r\n\r\n  return (\r\n    <span className=\"inline\">\r\n      <DropdownButton\r\n        title={language}\r\n        variant=\"outline-secondary\"\r\n      >\r\n        {LANGUAGES.map((lang) => (\r\n          <Dropdown.Item\r\n            key={lang}\r\n            name={lang}\r\n            as=\"button\"\r\n            onClick={switchLanguage}\r\n          >\r\n            {lang}\r\n          </Dropdown.Item>\r\n        ))}\r\n      </DropdownButton>\r\n\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default LanguageSelect;\r\n","import React, { useState } from \"react\";\r\nimport Confetti from \"react-confetti\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { FaImages } from \"react-icons/fa\";\r\nimport PlayerSelect from \"../PlayerSelect\";\r\nimport Puzzle from \"../Puzzle\";\r\nimport Gallery from \"../Gallery\";\r\nimport BouncingImage from \"../BouncingImage\";\r\nimport LanguageSelect from \"../LanguageSelect\";\r\nimport { t } from \"../../utils/translation\";\r\nimport { getStorageItem, setStorageItem } from \"../../utils/storage\";\r\nimport \"./App.css\";\r\n\r\nconst PRIZE_MISSIONS = 10;\r\nconst CONFETTI_TIMER = 8000;\r\n\r\nlet players = getStorageItem(\"players\", [\r\n  {\r\n    name: \"Player1\",\r\n    missions: 0,\r\n  },\r\n]);\r\n\r\nlet IMAGES = getStorageItem(\r\n  \"images\",\r\n  Array.from({ length: 10 }, (_, i) => \"p\" + (i + 1) + \".jpg\")\r\n);\r\n\r\n//console.log(\"players:\", players);\r\nlet missionComplete = false;\r\n\r\nfunction App() {\r\n  const [, updateState] = React.useState();\r\n  const forceUpdate = React.useCallback(() => updateState({}), []);\r\n  const [player, setPlayer] = useState(players[0]);\r\n  const [showGallery, setShowGallery] = useState(false);\r\n  const [images] = useState(getStorageItem(\"images\", IMAGES));\r\n  const [showPrize, setShowPrize] = useState(false);\r\n  const [language, setLanguage] = useState(\r\n    getStorageItem(\"language\", navigator.language.substr(0, 2))\r\n  );\r\n\r\n  if (!player.missions) {\r\n    player.missions = 0;\r\n  }\r\n\r\n  const handleComplete = () => {\r\n    missionComplete = true;\r\n    if (!player.missions) {\r\n      player.missions = 0;\r\n    }\r\n    player.missions++;\r\n    setStorageItem(\"players\", players);\r\n    if (player.missions % PRIZE_MISSIONS === 0) {\r\n      setShowPrize(true);\r\n    }\r\n    forceUpdate();\r\n    setTimeout(() => {\r\n      missionComplete = false;\r\n      forceUpdate();\r\n    }, CONFETTI_TIMER);\r\n  };\r\n\r\n  const handleConfigChange = () => {\r\n    setStorageItem(\"players\", players);\r\n  };\r\n\r\n  const handleSwitchPlayer = (name) => {\r\n    setPlayer(players.filter((player) => player.name === name)[0]);\r\n  };\r\n\r\n  const handleGalleryClose = () => {\r\n    setShowGallery(false);\r\n  };\r\n\r\n  const updateImages = () => {\r\n    setStorageItem(\"images\", images);\r\n    forceUpdate();\r\n  };\r\n\r\n  const handleBouncingClose = () => {\r\n    setShowPrize(false);\r\n  };\r\n\r\n  const handleLanguageChange = (lang) => {\r\n    setLanguage(lang);\r\n    setStorageItem(\"language\", lang);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"no-padding\">\r\n            <span>\r\n              <Button onClick={() => setShowGallery(true)}>\r\n                <FaImages />\r\n              </Button>\r\n            </span>\r\n            <span>\r\n              <PlayerSelect\r\n                players={players}\r\n                player={player}\r\n                onPlayersChange={handleConfigChange}\r\n                onSwitchPlayer={handleSwitchPlayer}\r\n              ></PlayerSelect>\r\n            </span>\r\n          </Col>\r\n          <Col>\r\n            {t(\"Missions\")}: {player.missions || \"0\"}\r\n          </Col>\r\n          <Col className=\"right\">\r\n            <LanguageSelect\r\n              language={language}\r\n              onchange={handleLanguageChange}\r\n            ></LanguageSelect>\r\n          </Col>\r\n        </Row>\r\n        <Row></Row>\r\n\r\n        <Puzzle\r\n          player={player}\r\n          images={images}\r\n          onComplete={handleComplete}\r\n          onConfig={handleConfigChange}\r\n        />\r\n      </Container>\r\n\r\n      {missionComplete && <Confetti />}\r\n\r\n      {showPrize && (\r\n        <BouncingImage onClose={handleBouncingClose}></BouncingImage>\r\n      )}\r\n\r\n      {showGallery && images && (\r\n        <Gallery\r\n          images={images}\r\n          onUpdate={updateImages}\r\n          onClose={handleGalleryClose}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}